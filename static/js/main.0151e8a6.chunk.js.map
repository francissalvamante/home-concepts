{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CountdownComponent","props","launchDate","Date","days","hours","minutes","seconds","completed","Container","fluid","Row","className","Col","href","src","md","date","this","renderer","React","Component","App","Navbar","bg","expand","Brand","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SASMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,WAAa,IAAIC,KAAK,oBAFV,E,4CAKnB,YAAwD,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAC/B,IADqD,EAAbC,UAItC,OACE,qCACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,CAAKC,UAAU,iBAAf,SACE,cAACC,EAAA,EAAD,UAAK,mBAAGC,KAAK,sCAAR,SAA8C,qBAAKC,IAAI,uBAGhE,cAACN,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAKD,UAAU,cAAf,8BAIJ,cAACH,EAAA,EAAD,CAAWG,UAAU,kBAArB,SACE,eAACD,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAKG,GAAG,IAAR,kBACA,cAACH,EAAA,EAAD,CAAKD,UAAU,cAAcI,GAAG,IAAhC,SACE,sBAAKJ,UAAU,OAAf,UAAwBR,EAAxB,IAA+B,uBAA/B,YAEF,cAACS,EAAA,EAAD,CAAKD,UAAU,cAAcI,GAAG,IAAhC,SACE,sBAAKJ,UAAU,OAAf,UAAwBP,EAAxB,IAAgC,uBAAhC,aAEF,cAACQ,EAAA,EAAD,CAAKD,UAAU,cAAcI,GAAG,IAAhC,SACE,sBAAKJ,UAAU,OAAf,UAAwBN,EAAxB,IAAkC,uBAAlC,eAEF,cAACO,EAAA,EAAD,CAAKD,UAAU,cAAcI,GAAG,IAAhC,SACE,sBAAKJ,UAAU,OAAf,UAAwBL,EAAxB,IAAkC,uBAAlC,eAEF,cAACM,EAAA,EAAD,CAAKG,GAAG,IAAR,4B,oBAQZ,WACE,OACE,mCACE,cAAC,IAAD,CACEC,KAAOC,KAAKhB,WACZiB,SAAUD,KAAKC,iB,GAnDQC,IAAMC,WAuExBC,MAbf,WACE,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,cAACF,EAAA,EAAOG,MAAR,CAAcZ,KAAK,sCAAnB,SAAyD,qBAAKC,IAAI,mBAEpE,qBAAKH,UAAU,sCAAf,SACE,cAAC,EAAD,UC9DOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0151e8a6.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Countdown from 'react-countdown';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass CountdownComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.launchDate = new Date('03/01/2021 08:00');\r\n  }\r\n\r\n  renderer({ days, hours, minutes, seconds, completed }) {\r\n    if(completed) {\r\n      // do something\r\n    } else {\r\n      return (\r\n        <>\r\n          <Container fluid>\r\n            <Row className=\"logo-container\">\r\n              <Col><a href=\"https://facebook.com/HomeConceptsPH\"><img src=\"hclogo.png\"></img></a></Col>\r\n            </Row>\r\n          </Container>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col className=\"coming-soon\">Coming Soon!</Col>\r\n            </Row>\r\n          </Container>\r\n          {/* <div className=\"container-fluid coming-soon\">Coming Soon</div> */}\r\n          <Container className=\"countdown-timer\">\r\n            <Row>\r\n              <Col md=\"2\">&nbsp;</Col>\r\n              <Col className=\"text-center\" md=\"2\">\r\n                <div className=\"days\">{ days } <br></br>DAYS</div>\r\n              </Col>\r\n              <Col className=\"text-center\" md=\"2\">\r\n                <div className=\"days\">{ hours } <br></br>HOURS</div>\r\n              </Col>\r\n              <Col className=\"text-center\" md=\"2\">\r\n                <div className=\"days\">{ minutes } <br></br>MINUTES</div>\r\n              </Col>\r\n              <Col className=\"text-center\" md=\"2\">\r\n                <div className=\"days\">{ seconds } <br></br>SECONDS</div>\r\n              </Col>\r\n              <Col md=\"2\">&nbsp;</Col>\r\n            </Row>\r\n          </Container>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Countdown \r\n          date={ this.launchDate }\r\n          renderer={this.renderer}\r\n        ></Countdown>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"white\" expand=\"lg\">\r\n        <Navbar.Brand href=\"https://facebook.com/HomeConceptsPH\"><img src=\"hclogo.png\"></img></Navbar.Brand>\r\n      </Navbar>\r\n      <div className=\"container-fluid countdown-container\">\r\n        <CountdownComponent></CountdownComponent>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}