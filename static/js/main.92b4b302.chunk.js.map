{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CountdownComponent","props","launchDate","Date","days","hours","minutes","seconds","completed","Container","fluid","Row","className","Col","href","src","md","date","this","renderer","React","Component","App","Navbar","bg","expand","Brand","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SASMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,WAAa,IAAIC,KAAK,oBAFV,E,4CAKnB,YAAwD,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAC/B,IADqD,EAAbC,UAItC,OACE,qCACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,CAAKC,UAAU,iBAAf,SACE,cAACC,EAAA,EAAD,UAAK,mBAAGC,KAAK,sCAAR,SAA8C,qBAAKC,IAAI,uBAGhE,cAACN,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAKD,UAAU,cAAf,8BAIJ,cAACH,EAAA,EAAD,CAAWG,UAAU,kBAArB,SACE,eAACD,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAKG,GAAG,IAAR,kBACA,cAACH,EAAA,EAAD,CAAKD,UAAU,cAAcI,GAAG,IAAhC,SACE,sBAAKJ,UAAU,OAAf,UAAwBR,EAAxB,IAA+B,uBAA/B,YAEF,cAACS,EAAA,EAAD,CAAKD,UAAU,cAAcI,GAAG,IAAhC,SACE,sBAAKJ,UAAU,OAAf,UAAwBP,EAAxB,IAAgC,uBAAhC,aAEF,cAACQ,EAAA,EAAD,CAAKD,UAAU,cAAcI,GAAG,IAAhC,SACE,sBAAKJ,UAAU,OAAf,UAAwBN,EAAxB,IAAkC,uBAAlC,eAEF,cAACO,EAAA,EAAD,CAAKD,UAAU,cAAcI,GAAG,IAAhC,SACE,sBAAKJ,UAAU,OAAf,UAAwBL,EAAxB,IAAkC,uBAAlC,eAEF,cAACM,EAAA,EAAD,CAAKG,GAAG,IAAR,4B,oBAQZ,WACE,OACE,mCACE,cAAC,IAAD,CACEC,KAAOC,KAAKhB,WACZiB,SAAUD,KAAKC,iB,GAnDQC,IAAMC,WAuExBC,MAbf,WACE,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,cAACF,EAAA,EAAOG,MAAR,CAAcZ,KAAK,sCAAnB,SAAyD,qBAAKC,IAAI,mBAEpE,qBAAKH,UAAU,sCAAf,SACE,cAAC,EAAD,UC9DOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.92b4b302.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Countdown from 'react-countdown';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass CountdownComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.launchDate = new Date('03/01/2021 08:00');\n  }\n\n  renderer({ days, hours, minutes, seconds, completed }) {\n    if(completed) {\n      // do something\n    } else {\n      return (\n        <>\n          <Container fluid>\n            <Row className=\"logo-container\">\n              <Col><a href=\"https://facebook.com/HomeConceptsPH\"><img src=\"hclogo.png\"></img></a></Col>\n            </Row>\n          </Container>\n          <Container fluid>\n            <Row>\n              <Col className=\"coming-soon\">Coming Soon!</Col>\n            </Row>\n          </Container>\n          {/* <div className=\"container-fluid coming-soon\">Coming Soon</div> */}\n          <Container className=\"countdown-timer\">\n            <Row>\n              <Col md=\"2\">&nbsp;</Col>\n              <Col className=\"text-center\" md=\"2\">\n                <div className=\"days\">{ days } <br></br>DAYS</div>\n              </Col>\n              <Col className=\"text-center\" md=\"2\">\n                <div className=\"days\">{ hours } <br></br>HOURS</div>\n              </Col>\n              <Col className=\"text-center\" md=\"2\">\n                <div className=\"days\">{ minutes } <br></br>MINUTES</div>\n              </Col>\n              <Col className=\"text-center\" md=\"2\">\n                <div className=\"days\">{ seconds } <br></br>SECONDS</div>\n              </Col>\n              <Col md=\"2\">&nbsp;</Col>\n            </Row>\n          </Container>\n        </>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Countdown \n          date={ this.launchDate }\n          renderer={this.renderer}\n        ></Countdown>\n      </>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <>\n      <Navbar bg=\"white\" expand=\"lg\">\n        <Navbar.Brand href=\"https://facebook.com/HomeConceptsPH\"><img src=\"hclogo.png\"></img></Navbar.Brand>\n      </Navbar>\n      <div className=\"container-fluid countdown-container\">\n        <CountdownComponent></CountdownComponent>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}